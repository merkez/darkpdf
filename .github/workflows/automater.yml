name: Convert PDF to PDF by inverting colours

on:
  workflow_dispatch: # enable manual run
   inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
  push:
    paths:
      - 'uploads/**.pdf'


jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install poppler-utils
        run: |
          sudo apt-get update -y
          sudo apt-get install poppler-utils -y

      - name: Get current date as unix format
        id: date
        run: echo "::set-output name=date::$(date +%s%N)"

      - name: Process files
        run : |
          python converter.py

      - name: Add and commit files
        run: |
          git config --global user.email "robotcuk@randommail.com"
          git config --global user.name "robotcuk"
          git add  released/*
          git rm uploads/*.pdf
          git commit -m "[automated message] uploaded files processed and released" uploads/* released/*
          git tag -a ${{ steps.date.outputs.date }} -m "Product Update: ${{ steps.date.outputs.date }} "
          git push origin ${{ steps.date.outputs.date }}
          git push origin -f master
        env:
          GITHUB_TOKEN: ${{ secrets.ROBOTCUK }}


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ steps.date.outputs.date }}
          release_name: New PDF Files Inverted ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./*.pdf

